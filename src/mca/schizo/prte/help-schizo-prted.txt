# -*- text -*-
#
# Copyright (c) 2021-2022 Nanook Consulting.  All rights reserved.
# $COPYRIGHT$
#
# Additional copyrights may follow
#
# $HEADER$
#
#
[version]
%s (%s) %s

%s
#
[usage-prte]
%s (%s) %s

Usage: %s [OPTION]...
Initiate an instance of the PMIx Reference RTE (PRRTE) DVM

/*****      General Options      *****/

-h|--help                            This help message
-h|--help <arg0>                     Help for the specified option
-v|--verbose                         Enable typical debug options
-V|--version                         Print version and exit


/*****       Debug Options       *****/

-d|--debug-devel                     Enable debugging of PRTE
   --debug                           Top-level PRTE debug switch (default: false) This option will be
                                     deprecated, use --debug-devel instead.
   --debug-daemons                   Debug daemons
   --debug-daemons-file              Enable debugging of any PRTE daemons used by this application, storing
                                     output in files
   --debug-verbose <arg0>            Verbosity level for PRTE debug messages (default: 1)
   --display <arg0>                  Comma-delimited list of options for displaying information about the
                                     allocation and job.Allowed values: allocation, bind, map, map-devel,
                                     topo
   --display-allocation              Display the allocation being used by this job
   --display-map                     Display the process map just before launch
   --get-stack-traces                Get stack traces of all application procs on timeout
   --leave-session-attached          Do not discard stdout/stderr of remote PRTE daemons
   --output-proctable <arg0>         Print the complete proctable to stdout [-], stderr [+], or a file
                                     [anything else] after launch
   --report-state-on-timeout         Report all job and process states upon timeout
   --spawn-timeout <arg0>            Timeout the job if spawn takes more than the specified number of seconds
   --stop-on-exec                    If supported, stop each process at start of execution
   --test-suicide <arg0>             Suicide instead of clean abort after delay
   --timeout <arg0>                  Timeout the job after the specified number of seconds



/*****      Output Options       *****/

   --merge-stderr-to-stdout          Merge stderr to stdout for each process
   --output <arg0>                   Comma-delimited list of options that control how output is
                                     generated.Allowed values: tag, timestamp, xml, merge-stderr-to-stdout,
                                     dir=DIRNAME, file=filename. The dir option redirects output from
                                     application processes into DIRNAME/job/rank/std[out,err,diag]. The file
                                     option redirects output from application processes into filename.rank. In
                                     both cases, the provided name will be converted to an absolute path.
                                     Supported qualifiers include NOCOPY (do not copy the output to the
                                     stdout/err streams).
   --output-directory <arg0>         Redirect output from application processes into
                                     filename/job/rank/std[out,err,diag]. A relative path value will be
                                     converted to an absolute path. The directory name may include a colon
                                     followed by a comma-delimited list of optional case-insensitive
                                     directives. Supported directives currently include NOJOBID (do not
                                     include a job-id directory level) and NOCOPY (do not copy the output to
                                     the stdout/err streams)
   --output-filename <arg0>          Redirect output from application processes into filename.rank. A relative
                                     path value will be converted to an absolute path. The directory name may
                                     include a colon followed by a comma-delimited list of optional
                                     case-insensitive directives. Supported directives currently include
                                     NOCOPY (do not copy the output to the stdout/err streams)
   --report-child-jobs-separately    Return the exit status of the primary job only
   --tag-output                      Tag all output with [job,rank]
   --timestamp-output                Timestamp all application process output
   --xml                             Provide all output in XML format
   --xterm <arg0>                    Create a new xterm window and display output from the specified ranks
                                     there



/*****       Input Options       *****/

   --stdin <arg0>                    Specify procs to receive stdin [rank, all, none] (default: 0, indicating
                                     rank 0)



/*****      Mapping Options      *****/

   --map-by <arg0>                   Mapping Policy for job [slot | hwthread | core (default:np<=2) | l1cache
                                     | l2cache | l3cache | numa (default:np>2) | package | node | seq | dist |
                                     ppr |,rankfile] with supported colon-delimited modifiers: PE=y (for
                                     multiple cpus/proc), SPAN, OVERSUBSCRIBE, NOOVERSUBSCRIBE, NOLOCAL,
                                     HWTCPUS, CORECPUS, DEVICE(for dist policy), INHERIT, NOINHERIT,
                                     PE-LIST=a,b (comma-delimited ranges of cpus to use for this job),
                                     FILE=<path> for seq and rankfile options



/*****      Ranking Options      *****/

   --rank-by <arg0>                  Ranking Policy for job [slot (default:np<=2) | hwthread | core | l1cache
                                     | l2cache | l3cache | numa (default:np>2) | package | node], with
                                     modifier :SPAN or :FILL



/*****      Binding Options      *****/

   --bind-to <arg0>                  Binding policy for job. Allowed values: none, hwthread, core, l1cache,
                                     l2cache, l3cache, numa, package, ("none" is the default when
                                     oversubscribed, "core" is the default when np<=2, and "numa" is the
                                     default when np>2). Allowed colon-delimited qualifiers: overload-allowed,
                                     if-supported



/*****     Developer Options     *****/

   --display-devel-allocation        Display a detailed list (mostly intended for developers) of the
                                     allocation being used by this job
   --display-devel-map               Display a detailed process map (mostly intended for developers) just
                                     before launch
   --display-topo                    Display the topology as part of the process map (mostly intended for
                                     developers) just before launch
   --do-not-launch                   Perform all necessary operations to prepare to launch the application,
                                     but do not actually launch it (usually used to test mapping patterns)
   --report-bindings                 Whether to report process bindings to stderr



/*****      Launch Options       *****/

   --default-hostfile <arg0>         Provide a default hostfile
   --gpmixmca <arg0> <arg1>          Pass global PMIx MCA parameters that are applicable to all contexts (arg0
                                     is the parameter name; arg1 is the parameter value)
-H|--host <arg0>                     List of hosts to invoke processes on
   --hostfile <arg0>                 Provide a hostfile
   --initial-errhandler <arg0>       Specify the initial error handler that is attached to predefined
                                     communicators during the first MPI call.
   --machinefile <arg0>              Provide a hostfile
   --mca <arg0> <arg1>               Pass context-specific MCA parameters; they are considered global if
                                     --gmca is not used and only one context is specified (arg0 is the
                                     parameter name; arg1 is the parameter value)
   --path <arg0>                     PATH to be used to look for executables to start processes
   --pmixmca <arg0> <arg1>           Pass context-specific PMIx MCA parameters; they are considered global if
                                     --gmca is not used and only one context is specified (arg0 is the
                                     parameter name; arg1 is the parameter value)
   --preload-files <arg0>            Preload the comma separated list of files to the remote machines current
                                     working directory before starting the remote process.
   --prtemca <arg0> <arg1>           Pass context-specific PRTE MCA parameters; they are considered global if
                                     --gmca is not used and only one context is specified (arg0 is the
                                     parameter name; arg1 is the parameter value)
   --pset <arg0>                     User-specified name assigned to the processes in their given application
   --rankfile <arg0>                 Name of file to specify explicit task mapping
-s|--preload-binary                  Preload the binary on the remote machine before starting the remote
                                     process.
   --set-cwd-to-session-dir          Set the working directory of the started processes to their session
                                     directory
   --show-progress                   Output a brief periodic report on launch progress
   --stream-buffering <arg0>         Adjust buffering for stdout/stderr [0 unbuffered] [1 line buffered] [2
                                     fully buffered]
   --wd <arg0>                       Synonym for --wdir
   --wdir <arg0>                     Set the working directory of the started processes
-x <arg0>                            Export an environment variable, optionally specifying a value (e.g., "-x
                                     foo" exports the environment variable foo and takes its value from the
                                     current environment; "-x foo=bar" exports the environment variable name
                                     foo and sets its value to "bar" in the started processes; "-x foo*"
                                     exports all current environmental variables starting with "foo")



/*****    %s Specific Options   *****/

   --allow-run-as-root               Allow execution as root (STRONGLY DISCOURAGED)
   --daemonize                       Daemonize the DVM daemons into the background
   --forward-signals <arg0>          Comma-delimited list of additional signals (names or integers) to forward
                                     to application processes ["none" => forward nothing]. Signals provided by
                                     default include SIGTSTP, SIGUSR1, SIGUSR2, SIGABRT, SIGALRM, and SIGCONT
   --keepalive <arg0>                Pipe to monitor - DVM will terminate upon closure
   --launch-agent <arg0>             Name of daemon executable used to start processes on remote nodes
                                     (default: prted)
   --max-vm-size <arg0>              Number of daemons to start
   --no-ready-msg                    Do not print a DVM ready message
   --noprefix                        Disable automatic --prefix behavior
   --personality <arg0>              Specify the personality to be used
   --prefix <arg0>                   Prefix to be used to look for RTE executables
   --report-pid <arg0>               Printout pid on stdout [-], stderr [+], or a file [anything else]
   --report-uri <arg0>               Printout URI on stdout [-], stderr [+], or a file [anything else]
   --set-sid                         Direct the DVM daemons to separate from the current session
   --singleton <arg0>                ID of the singleton process that started us
   --system-server                   Start the DVM as the system server
   --tmpdir <arg0>                   Set the root for the session directory tree
   --tune <arg0>                     File(s) containing MCA params for tuning DVM operations


Report bugs to %s
#
[usage-prted]
NEED FULL PAGE FOR PRTED
#
[usage-prun]
NEED FULL PAGE FOR PRUN
#
[usage-pterm]
%s (%s) %s

Usage: %s [OPTION]...
Terminate an instance of the PMIx Reference RTE (PRRTE) DVM

/*****      General Options      *****/

-h|--help                            This help message
-h|--help <arg0>                     Help for the specified option
-v|--verbose                         Enable typical debug options
-V|--version                         Print version and exit



/*****    %s Specific Options   *****/

   --dvm-uri <arg0>                  Specify the URI of the DVM master, or the name of the file (specified as
                                     file:filename) that contains that info
   --num-connect-retries <arg0>      Max number of times to try to connect (int)
   --pid <arg0>                      PID of the daemon to which we should connect (int => PID or file:<file>
                                     for file containing the PID
   --namespace <arg0>                Namespace of the daemon we are to connect to (char*)
   --system-server-first             First look for a system server and connect to it if found
   --system-server-only              Connect only to a system-level server
   --wait-to-connect                 Delay specified number of seconds before trying to connect


Report bugs to %s
#
[version]
%s (%s) %s

Report bugs to %s
#
[dvm-uri]
Specify the URI of the DVM master, or the name of the file (specified as
file:filename) that contains that info
#
[num-connect-retries]
Max number of times to try to connect to the specified server (int)
#
[pid]
PID of the daemon to which we should connect (int => PID or file:<file>
for file containing the PID
#
[namespace]
Namespace of the daemon we are to connect to (char*)
#
[system-server-first]
First look for a system server and connect to it if found
#
[system-server-only]
Connect only to a system-level server - abort if one is not found
#
[wait-to-connect]
Delay specified number of seconds before trying to connect
#
[parseable]
Output information (e.g., help messages) in machine-parseable
friendly format
#
[parsable]
Output information (e.g., help messages) in machine-parseable
friendly format
#
[np]
Specify number of application processes to be started
#
[no-ready-msg]
Do not print a DVM ready message
#
[daemonize]
Daemonize the DVM daemons into the background
#
[system-server]
Start the DVM as the system server
#
[set-sid]
Direct the DVM daemons to separate from the current session
#
[report-pid]
Printout PID on stdout [-], stderr [+], or a file [anything else]
#
[report-uri]
Printout URI on stdout [-], stderr [+], or a file [anything else]
#
[test-suicide]
Suicide instead of clean abort after delay
#
[default-hostfile]
Provide a default hostfile
#
[singleton]
ID of the singleton process that started us
#
[keepalive]
Pipe to monitor - DVM will terminate upon closure
#
[map-by]
Mapping Policy for job:
    slot
    hwthread
    core (default: np <= 2)
    l1cache
    l2cache
    l3cache
    numa (default: np > 2)
    package
    node
    seq
    dist
    ppr
    rankfile
with supported colon-delimited qualifiers:
    PE=y (for multiple cpus/proc)
    SPAN
    OVERSUBSCRIBE
    NOOVERSUBSCRIBE
    NOLOCAL
    HWTCPUS
    CORECPUS
    DEVICE(for dist policy)
    INHERIT
    NOINHERIT
    PE-LIST=a,b (comma-delimited ranges of cpus to use for this job)
    FILE=<path> for seq and rankfile options
#
[rank-by]
Ranking Policy for job:
    slot (default: np <= 2)
    hwthread
    core
    l1cache
    l2cache
    l3cache
    numa (default: np > 2)
    package
    node
with supported colon-delimited qualifiers:
    SPAN
    FILL
#
[bind-to]
Binding Policy for job:
    none (default: oversubscribed)
    hwthread
    core (default: np <= 2)
    l1cache
    l2cache
    l3cache
    numa (default: np > 2)
    package
with supported colon-delimited qualifiers:
    overload-allowed
    if-supported
#
[display]
Comma-delimited list of options for displaying information
about the allocation and job. Allowed values:
    allocation
    bind
    map
    map-devel
    topo
#
[rankfile]
Name of file to specify explicit task mapping
#
[do-not-launch]
Perform all necessary operations to prepare to launch the
application, but do not actually launch it (usually used
to test mapping patterns)
#
[display-devel-map]
Display a detailed process map (mostly intended for developers)
just before launch
#
[display-topo]
Display the topology as part of the process map (mostly intended
for developers) just before launch
#
[report-bindings]
"Display process bindings to stderr
#
[display-devel-allocation]
Display a detailed list (mostly intended for developers) of the
allocation being used by this job
#
[display-map]
Display the process map just before launch
#
[display-allocation]
Display the allocation being used by this job
#
[enable-recovery]
Enable recovery from process failure [Default = disabled]
#
[max-restarts]
Max number of times to restart a failed process
#
[disable-recovery]
Disable recovery (resets all recovery options to off)
#
[continuous]
Job is to run until explicitly terminated
#
[personality]
Specify the personality to be used
#
[prte-server]
Specify the URI of the publish/lookup server, or the name
of the file (specified as file:filename) that contains that info
#
[dvm-master-uri]
URI for the DVM master
#
[parent-uri]
URI for the parent if tree launch is enabled
#
[tree-spawn]
Tree-based spawn in progress
#
[daemonize]
Daemonize the DVM daemons into the background
#
[set-sid]
Direct the DVM daemons to separate from the current session
#
[prtemca]
Pass context-specific PRTE MCA parameters (arg0 is the
parameter name; arg1 is the parameter value)
#
[pmixmca]
Pass context-specific PMIx MCA parameters (arg0 is the
parameter name; arg1 is the parameter value)
#
[debug-daemons-file]
Enable debugging of any PRTE daemons used by this
application, storing output in files
#
[leave-session-attached]
Do not discard stdout/stderr of remote PRTE daemons
