# Use "required" for sudo, because we want to use the "trusty" Debian
# distro, which is (currently) only available in the legacy Travis
# infrastructure (i.e., if we put "sudo: false" to use the new container-
# based Travis infrastructure, then "trusty" is not available).  We
# need the "trusty" distro because it has more recent versions of the
# GNU Autotools (i.e., autogen.pl will fail if you use the regular
# distro because the GNU Autotools are too old).
sudo: required
dist: trusty
language: c

# Iterate over 2 different compilers
compiler:
    - gcc
    - clang

# Test only linux now
os:
    - linux

addons:
    # For Linux, make sure we have some extra packages that we like to
    # build with
    apt:
        packages:
            - autoconf
            - automake
            - libtool
            - libnl-3-200
            - libnl-3-dev
            - libnl-route-3-200
            - libnl-route-3-dev
            - libibverbs-dev
            - librdmacm-dev
            - libhwloc-dev
        sources:
            - ubuntu-toolchain-r-test

env:
    global:
        - AM_MAKEFLAGS="-j4"
        - CPPFLAGS="-I$HOME/bogus/include"
        - LDFLAGS="-L$HOME/bogus/lib"
        - LD_LIBRARY_PATH="$HOME/bogus/lib"
    matrix:
        - GCC_VERSION=default
        - GCC_VERSION=6
        - GCC_VERSION=7

before_install:
    - if [[ "GCC_VERSION" == "6" ]]; then COMPILERS="CC=gcc-6 CXX=g++-6 FC=gfortran-6"; fi
    - if [[ "GCC_VERSION" == "7" ]]; then COMPILERS="CC=gcc-7 CXX=g++-7 FC=gfortran-7"; fi
    - export CONFIGURE_ARGS="--prefix=$HOME/bogus --enable-orterun-prefix-by-default $COMPILERS" DISTCHECK_CONFIGURE_FLAGS="$CONFIGURE_ARGS"
    - export DISTCHECK_CONFIGURE_FLAGS="$CONFIGURE_ARGS"
    - if [[ "$GCC_VERSION" == "6" ]] ; then sudo apt-cache policy || true ; fi
    - if [[ "$GCC_VERSION" == "6" ]] ; then sudo apt-cache search gcc || true ; fi
    - if [[ "$GCC_VERSION" == "6" ]] ; then sudo apt-get --assume-yes install gcc-6 g++-6 gfortran-6; fi
    - if [[ "$GCC_VERSION" == "7" ]] ; then sudo apt-get --assume-yes install gcc-7 g++-7 gfortran-7; fi

# Note that we use "make -k" to do the entire build, even if there was a
# build error in there somewhere.  This prevents us from needing to submit
# to Travis, see the first error, fix that first error, submit again, ...etc.
install:
    - m4 --version
    - autoconf --version
    - automake --version
    - libtool --version
    - ./autogen.pl
    - ./configure $CONFIGURE_ARGS
    - make -k
    - make install

script:
    - make check
    - ./contrib/travis/test_client.sh

matrix:
  exclude:
    - env: GCC_VERSION=6
      compiler: clang
    - env: GCC_VERSION=7
      compiler: clang
